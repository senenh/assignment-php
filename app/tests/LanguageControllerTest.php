<?php

namespace App\Tests;

use Doctrine\Common\DataFixtures\Purger\ORMPurger;
use Doctrine\ORM\EntityManager;
use http\Client;
use Liip\TestFixturesBundle\Test\FixturesTrait;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class LanguageControllerTest extends WebTestCase
{
    use FixturesTrait;

    /**
     * @var Client
     */
    protected $client;

    /**
     * @var EntityManager
     */
    protected $em;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->client = static::createClient();
        $this->em = $this->client->getContainer()->get('doctrine')->getManager();

        $purger = new ORMPurger($this->em);
        $purger->purge();

        $this->loadFixtures(array(
            'App\DataFixtures\UserFixtures',
            'App\DataFixtures\AppFixtures',

        ));
    }

    public function testLanguagesListSuccess(): void
    {
        $this->client->request(
            'GET',
            '/api/languages',
            array(),
            array(),
            array(
                'HTTP_Authorization' => 'Bearer d96e7c6c7331bc282799681efd11e9fcbb0a781f0633834ae250cfb0c72c392af847bba77f6554ad408ab8f5032de43c137e7482f70dbc7a9d72310f'
            )
        );

        self::assertEquals('[{"id":1,"name":"English","ISO":"eng","LTR":true},{"id":2,"name":"Spanish","ISO":"spa","LTR":true},{"id":3,"name":"Portuguese","ISO":"por","LTR":true},{"id":4,"name":"French","ISO":"fra","LTR":true}]', $this->client->getResponse()->getContent());
        self::assertResponseIsSuccessful();
    }

    public function testLanguagesListAccesDenied(): void
    {
        $this->client->request(
            'GET',
            '/api/languages',
            array(),
            array(),
            array(
            )
        );

        self::assertResponseStatusCodeSame(401);
    }
}
